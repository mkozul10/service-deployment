name: Build and deploy

on:
  push:
    branches: [main]
  # pull_request:
  #   branches: [main]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
  DIGITALOCEAN_DROPLET_HOST: ${{ secrets.DIGITALOCEAN_DROPLET_HOST }}
  DIGITAL_OCENAN_SSH_KEY: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
  DOCKER_CONTAINER_NAME: my-container-name-1
  DOCKER_EMAIL: ${{ secrets.DOCKER_EMAIL }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Run application
        run: |
          node src/app.js &
          sleep 5
          curl -f http://localhost:3000 || exit 1

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -f docker/Dockerfile -t $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_EMAIL }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        run: |
          docker tag $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):${{ github.sha }} $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):latest
          docker push $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):latest

      - name: Cleanup
        if: ${{ failure() }}
        run: |
          docker image rm $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):${{ github.sha }}
          docker image rm $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Create .env file from GitHub secrets
        run: |
          echo "PORT=${{ secrets.APP_PORT }}" >> .env
          echo "NODE_ENV=${{ secrets.APP_NODE_ENV }}" >> .env

      - name: Deploy to DigitalOcean droplet via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DIGITALOCEAN_DROPLET_HOST }}
          username: root
          key: ${{ env.DIGITAL_OCEAN_SSH_KEY }}
          password: ${{ secrets.DIGITALOCEAN_SSH_PASSWORD }}
          script: |
            docker pull $(echo "${{ env.DOCKER_USERNAME }}-${{ env.DOCKER_IMAGE_NAME }}"):latest
            running_container_id=$(docker ps | grep "$(echo "${{ env.DOCKER_IMAGE_NAME }}")" | awk '{print $1}')
            if [ -n "$running_container_id" ]; then
              docker stop $running_container_id
              docker rm $running_container_id
              image_id=$(docker images | grep "$(echo "${{ env.DOCKER_IMAGE_NAME }}")" | awk '{print $3}')
              docker rmi $image_id
            fi
            docker run -d -p 3000:3000 --env-file .env --name $(echo "${{ env.DOCKER_CONTAINER_NAME }}") $(echo "${{ env.DOCKER_IMAGE_NAME }}"):latest

      - name: Clean up .env file
        run: rm .env
